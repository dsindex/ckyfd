#!/usr/bin/env python
#-*- coding: utf8 -*-

import os
from optparse import OptionParser

# global variable
VERBOSE = 0

import sys
reload(sys)
sys.setdefaultencoding('utf-8')
sys.path.append('@prefix@/lib')
import libpkyfd as pkyfd
import rouzeta

if __name__ == '__main__':

	parser = OptionParser()
	parser.add_option("--verbose", action="store_const", const=1, dest="verbose", help="verbose mode")
	parser.add_option("-c", "--config", dest="config_path", help="config path", metavar="config_path")
	(options, args) = parser.parse_args()

	config_path = options.config_path
	if config_path == None :
		parser.print_help()
		sys.exit(1)

	nbest='1'
	oformat='score'     # text, score
	unknown='<epsilon>' # unknown symbol
	kyfd = pkyfd.Index()
	kyfd.init(config_path, nbest, oformat, unknown)

	while 1:
		try:
			line = sys.stdin.readline()
		except KeyboardInterrupt:
			break
		if not line:
			break
		line = line.strip()
		outs = rouzeta.tagging(kyfd, line, verbose=False)
		for out in outs :
			mlist, elist, score  = out
			eidx = 0
			for eoj in elist :
				print str(eidx) + '\t' + eoj
				eidx += 1
			for m in mlist :
				morph = m['morph']
				tag = m['tag']
				ltag = m['ltag']
				stag = m['stag']
				eidx = m['eidx']
				midx = m['midx']
				tp = [morph, tag, ltag, stag, eidx, midx]
				print '\t'.join([str(e) for e in tp])
